-
    /**
     * @param {object} data - Array for sort.
     * @param {string} key - Get key in object.
     * @param {number} start - Slice string start.
     * @param {number} end - Slice string end.
     */
    const sortDataNumber = (data, key, start, end) => {
        return data.sort((a, b) => {
            if (typeof a[key] === 'string' || typeof b[key] === 'string') {
                return Number(b[key].slice(start, end)) - Number(a[key].slice(start, end))
            }

            return b[key] - a[key];
        });
    }

mixin img(data)
    img(src=`${staticPath.img}/${data.img}`, alt=data.title)&attributes(data.attrs)

mixin link(data)
    a(href=data.url)&attributes(data.attrs)!=data.text

mixin icon(icon, width=undefined, height=width)
    svg(class=`icon-${icon}` width=width, height=height)
        use(xlink:href=symbolsInject ? `#${icon}` : `${PATH}assets/img/svg-symbols.svg#${icon}` )

mixin icon-m(icon, attrs)
    i.icon.material-icons&attributes(attrs)=icon
